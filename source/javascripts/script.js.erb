//= require '_typekit.js.erb'
//= require '_mixpanel.js.erb'
//= require '_ms.js.erb'
//= require '_util.js.erb'
//= require '_changevalue.js.erb'
//= require '_panels.js.erb'
//= require '_form.js.erb'
//= require '_form-update.js.erb'
//= require '_code.js.erb'
//= require '_threads.js.erb'
//= require '_error.js.erb'
//= require '_help.js.erb'
//= require '_url.js.erb'

// Vars
var mode        = 'web';
var panel       = 'form';
var outputMode  = 'text';
var multiLimit  = 3;
var msError     = false;
var msPrecision = 1000;
var thread      = 0;
var upper       = 16;
var lower       = -6;
var output      = document.getElementById('output');

// scale settings stored here
var $ = [
  {
    b: 1,
    u: 'em',
    r: 1.5
  }
];

// Update page
function msPage(l) {

  // Normalize bases into an array
  if (typeof($[thread].b) === 'number') {
    $[thread].b = [$[thread].b];
  }
  // seed innerHTML
  iHTML = '';
  // Process ratio
  $[thread].r = revRatio($[thread].r,$[thread].b);
  // Loop throught outputs
  for (var i = upper; i >= lower; i--) {
    // Find the target value
    var v = ms(i,{base:$[thread].b,ratio:$[thread].r})
    // Find the value to render in the style tag
    var vR = v+$[thread].u;
    // Find what base is being used
    var s = baseOrder()[modulo(i,$[thread].b.length)];
    // If em/rem convert to px due to small size display bugs
    if ($[thread].u === 'em' || $[thread].u === 'rem') {
      vR = v*16+'px';
    }
    //
    if (document.getElementById('ratio').value.search('@') != -1) {
      document.getElementById('routput').innerHTML = Math.round($[thread].r * 10000) / 10000;
    } else {
      document.getElementById('routput').innerHTML = '';
    }
    // Find output values to display
    var baseOne = '';
    var atSixteen = '';
    if ($[thread].b[0] != 1 || $[thread].u != 'em') {
      baseOne = '<li><span>'+
        Math.round(v/$[thread].b[0]*msPrecision)/msPrecision +
        'em</span></li>';
    }
    if ($[thread].u === 'px' && $[thread].b[0] != 16) {
      atSixteen = '<li><span>'+
        Math.round(v/16*msPrecision)/msPrecision +
        '<a href="http://nicewebtype.com/notes/2012/07/19/leave-default-font-size-alone-and-embrace-the-em/" title="What is ems @ 16?">em @ 16</a></span></li>';
    }
    // Add to innerHTML tempalte
    iHTML = iHTML +
      '<ul class="info m'+i+'">' +
      '<li class="output-function">ms('+i+')</li> ' +
      '<li id="m'+i+'value"><span>'+Math.round(v*msPrecision)/msPrecision+$[thread].u+'</span></li>' +
      baseOne + atSixteen +
      '</ul><div class="s'+s+' text text_m'+i+'" style="font-size:'+vR+';">The quick brown fox jumps over the lazy dog</div>'
  }

  output.childNodes[thread].innerHTML = iHTML;
  for (var i = 0; i < $.length; i++){
    output.childNodes[i].getElementsByClassName('text_m0')[0].scrollIntoView(false);
  }

  // URL, error handilng, and code mode
  error(msError);
  codeMode(mode,l);

  // Analytics
  mixpanel.track('scale', {
    'Units'        : $[thread].u,
    'Bases'        : $[thread].b.length,
    'Base values'  : $[thread].b,
    'Ratio values' : $[thread].b
  });
}
// run msPage without URL (arg l passed in through codeMode())
msPage(1);

// If iOS web app
if (window.navigator.standalone && ( navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false )) {
  document.body.classList.add('ios-webapp');
}

queryURL();