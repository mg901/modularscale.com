// keep track of base #
var baseCount = 0;

// Adds base form
function addBase(b) {
  // Get elements
  var formBases = document.getElementById('formBases');
  var newBase = document.createElement('label');
  if (!b) {
    var b = document.getElementsByClassName('base')[0].value;
  }
  // New base template
  newBase.innerHTML = '<input type="text" class="base" value="' + b + '" onkeyup="changeBase(this,event.keyCode)">';
  // Add new base to the base list
  formBases.appendChild(newBase);
  // Increase base count
  baseCount++;
  // Trigger class that lets CSS know multiple bases are shown
  if (baseCount === 1) {
    formBases.classList.add('multi');
  }
  // Trigger CSS to show bases have reached their limit
  if (baseCount === multiLimit) {
    formBases.classList.add('no-add');
  }
}

// Function to remove bases
function removeBase() {
  // Don'd do this if itâ€™ll remove all bases
  if (baseCount > 0) {
    document.getElementById('formBases').lastChild.remove();
    baseCount--;
  }
  // Trigger class that lets CSS know one base is left
  if (baseCount == 0) {
    formBases.classList.remove('multi');
  }
  // Trigger class that lets CSS know the base limit is gone
  if (baseCount < multiLimit) {
    formBases.classList.remove('no-add');
  }
  // Query base and recalculate page
  getBase();
  msPage();
}

// Global for if ratio select is toggled
var ratioSelect = 0;
// Toggle ratio select dropdown
function ratioSelectToggle() {
  // Get ratio select dropdown by id
  var el = document.getElementById('ratiosSelect');
  // Toggle the display of this dropdown
  if (ratioSelect) {
    el.style.display = 'none';
    ratioSelect = 0;
  } else {
    el.style.display = 'block';
    ratioSelect = 1;
  }
}

// Select ratio from dropdown
function rS(v) {
  // Set ratio to value selected
  document.getElementById('ratio').value = v;
  // Close ratio select
  ratioSelectToggle();
  // Update page
  changeRatio();
  msPage();
}
